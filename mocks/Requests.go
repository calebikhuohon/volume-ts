// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Requests is an autogenerated mock type for the Requests type
type Requests struct {
	mock.Mock
}

// GetFlightPaths provides a mock function with given fields: ctx, user
func (_m *Requests) GetFlightPaths(ctx context.Context, user string) ([][]string, error) {
	ret := _m.Called(ctx, user)

	var r0 [][]string
	if rf, ok := ret.Get(0).(func(context.Context, string) [][]string); ok {
		r0 = rf(ctx, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRequests interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequests creates a new instance of Requests. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequests(t mockConstructorTestingTNewRequests) *Requests {
	mock := &Requests{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
